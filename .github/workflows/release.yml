name: Build and Release

on:
  push:
    tags:
      - '*.*.*'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # - name: Install Inno Setup
      #   run: |
      #     curl -o C:\innosetup.exe https://jrsoftware.org/download.php/is.exe
      #     c:\innosetup.exe /VERYSILENT /SUPPRESSMSGBOXES /NORESTART /SP- /DIR="C:\InnoSetup"
      #   shell: powershell
      #
      # - name: Add Inno Setup to PATH
      #   run: echo "C:\InnoSetup" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      #   shell: powershell

      - name: Set up Inno Setup
        run: |
            # Download Inno Setup
            Invoke-WebRequest -Uri https://jrsoftware.org/download.php/is.exe -OutFile is.exe
            # Install Inno Setup
            Start-Process is.exe -ArgumentList '/VERYSILENT /SUPPRESSMSGBOXES /NORESTART /SP-'  -NoNewWindow -Wait

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install pyinstaller
        run: pip install pyinstaller

      - name: Build executable with pyinstaller
        run: pyinstaller --onefile --name yaas src/yaas.py

      # - name: Create installer with Inno Setup
      #   run: C:\InnoSetup\iscc.exe inno_setup_script.iss

      - name: Build Installer
        run: |
            # Run the Inno Setup script
            &"C:\Program Files (x86)\Inno Setup 6\ISCC.exe" inno_setup_script.iss

      - name: Upload installer as artifact
        uses: actions/upload-artifact@v2
        with:
          name: yaas_installer
          path: yaas_installer.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: yaas_installer
          path: .
      - name: upload windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./yaas_installer.exe
          asset_name: yaas_installer.exe
          asset_content_type: application/vnd.microsoft.portable-executable


      # - name: Release
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: >-
      #     gh release create ${{ github.ref_name }}
      #       "yaas_installer.exe"
      #       --generate-notes
      #       --title "Version ${{ github.ref_name }}"
      #
